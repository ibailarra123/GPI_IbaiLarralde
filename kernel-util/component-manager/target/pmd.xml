<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.38.0" timestamp="2024-05-23T11:29:40.894">
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/api/ComponentManager.java">
<violation beginline="35" endline="35" begincolumn="22" endcolumn="85" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ComponentManager" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'SAKAI_COMPONENTS_ROOT_SYS_PROP': the field is declared in an interface type
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/api/ServerConfigurationService.java">
<violation beginline="41" endline="41" begincolumn="22" endcolumn="86" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'SERVICE_NAME': the field is declared in an interface type
</violation>
<violation beginline="44" endline="44" begincolumn="15" endcolumn="69" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'static final' on field 'CURRENT_SERVER_URL': the field is declared in an interface type
</violation>
<violation beginline="47" endline="47" begincolumn="15" endcolumn="71" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'static final' on field 'CURRENT_PORTAL_PATH': the field is declared in an interface type
</violation>
<violation beginline="324" endline="324" begincolumn="9" endcolumn="70" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="toolGroupIsSelected" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'toolGroupIsSelected': the method is declared in an interface type
</violation>
<violation beginline="331" endline="331" begincolumn="9" endcolumn="69" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="toolGroupIsRequired" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'toolGroupIsRequired': the method is declared in an interface type
</violation>
<violation beginline="389" endline="389" begincolumn="11" endcolumn="37" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getSakaiLocales" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSakaiLocales': the method is declared in an interface type
</violation>
<violation beginline="395" endline="395" begincolumn="11" endcolumn="58" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getLocaleFromString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getLocaleFromString': the method is declared in an interface type
</violation>
<violation beginline="404" endline="404" begincolumn="11" endcolumn="61" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getCommaSeparatedListAsSet" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getCommaSeparatedListAsSet': the method is declared in an interface type
</violation>
<violation beginline="411" endline="411" begincolumn="11" endcolumn="33" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getSmtpServer" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSmtpServer': the method is declared in an interface type
</violation>
<violation beginline="419" endline="419" begincolumn="11" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getSmtpFrom" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSmtpFrom': the method is declared in an interface type
</violation>
<violation beginline="426" endline="426" begincolumn="11" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getSmtpPort" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSmtpPort': the method is declared in an interface type
</violation>
<violation beginline="430" endline="430" begincolumn="24" endcolumn="50" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'UNKNOWN': the field is declared in an interface type
</violation>
<violation beginline="431" endline="431" begincolumn="24" endcolumn="55" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'TYPE_BOOLEAN': the field is declared in an interface type
</violation>
<violation beginline="432" endline="432" begincolumn="24" endcolumn="47" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'TYPE_INT': the field is declared in an interface type
</violation>
<violation beginline="433" endline="433" begincolumn="24" endcolumn="51" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'TYPE_ARRAY': the field is declared in an interface type
</violation>
<violation beginline="434" endline="434" begincolumn="24" endcolumn="53" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'TYPE_STRING': the field is declared in an interface type
</violation>
<violation beginline="435" endline="441" begincolumn="24" endcolumn="5" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifiers 'public static final' on field 'TYPES': the field is declared in an interface type
</violation>
<violation beginline="452" endline="452" begincolumn="11" endcolumn="55" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getConfig': the method is declared in an interface type
</violation>
<violation beginline="463" endline="463" begincolumn="11" endcolumn="48" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getConfigItem': the method is declared in an interface type
</violation>
<violation beginline="474" endline="474" begincolumn="11" endcolumn="63" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="registerConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'registerConfigItem': the method is declared in an interface type
</violation>
<violation beginline="485" endline="485" begincolumn="11" endcolumn="77" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="registerListener" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'registerListener': the method is declared in an interface type
</violation>
<violation beginline="493" endline="493" begincolumn="11" endcolumn="37" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService" method="getConfigData" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getConfigData': the method is declared in an interface type
</violation>
<violation beginline="500" endline="521" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on interface 'ConfigData': members of interface types are implicitly public
</violation>
<violation beginline="500" endline="521" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ConfigData': member interfaces are implicitly static
</violation>
<violation beginline="504" endline="504" begincolumn="15" endcolumn="40" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" method="getTotalConfigItems" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getTotalConfigItems': the method is declared in an interface type
</violation>
<violation beginline="508" endline="508" begincolumn="15" endcolumn="45" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" method="getRegisteredConfigItems" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getRegisteredConfigItems': the method is declared in an interface type
</violation>
<violation beginline="512" endline="512" begincolumn="15" endcolumn="47" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" method="getUnRegisteredConfigItems" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getUnRegisteredConfigItems': the method is declared in an interface type
</violation>
<violation beginline="516" endline="516" begincolumn="15" endcolumn="36" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" method="getSources" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSources': the method is declared in an interface type
</violation>
<violation beginline="520" endline="520" begincolumn="15" endcolumn="42" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigData" method="getItems" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getItems': the method is declared in an interface type
</violation>
<violation beginline="526" endline="608" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on interface 'ConfigItem': members of interface types are implicitly public
</violation>
<violation beginline="526" endline="608" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ConfigItem': member interfaces are implicitly static
</violation>
<violation beginline="532" endline="532" begincolumn="15" endcolumn="30" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="requested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'requested': the method is declared in an interface type
</violation>
<violation beginline="540" endline="540" begincolumn="15" endcolumn="55" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="changed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'changed': the method is declared in an interface type
</violation>
<violation beginline="547" endline="547" begincolumn="15" endcolumn="32" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="copy" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'copy': the method is declared in an interface type
</violation>
<violation beginline="552" endline="552" begincolumn="15" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getName': the method is declared in an interface type
</violation>
<violation beginline="556" endline="556" begincolumn="15" endcolumn="32" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getValue': the method is declared in an interface type
</violation>
<violation beginline="560" endline="560" begincolumn="15" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getType" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getType': the method is declared in an interface type
</violation>
<violation beginline="564" endline="564" begincolumn="15" endcolumn="33" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getSource" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSource': the method is declared in an interface type
</violation>
<violation beginline="568" endline="568" begincolumn="15" endcolumn="39" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getDefaultValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getDefaultValue': the method is declared in an interface type
</violation>
<violation beginline="572" endline="572" begincolumn="15" endcolumn="38" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getDescription" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getDescription': the method is declared in an interface type
</violation>
<violation beginline="576" endline="576" begincolumn="15" endcolumn="33" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getRequested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getRequested': the method is declared in an interface type
</violation>
<violation beginline="580" endline="580" begincolumn="15" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getChanged" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getChanged': the method is declared in an interface type
</violation>
<violation beginline="584" endline="584" begincolumn="15" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getVersion" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getVersion': the method is declared in an interface type
</violation>
<violation beginline="588" endline="588" begincolumn="15" endcolumn="43" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="getHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getHistory': the method is declared in an interface type
</violation>
<violation beginline="593" endline="593" begincolumn="15" endcolumn="37" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="isRegistered" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'isRegistered': the method is declared in an interface type
</violation>
<violation beginline="598" endline="598" begincolumn="15" endcolumn="36" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="isDefaulted" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'isDefaulted': the method is declared in an interface type
</violation>
<violation beginline="602" endline="602" begincolumn="15" endcolumn="34" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="isSecured" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'isSecured': the method is declared in an interface type
</violation>
<violation beginline="607" endline="607" begincolumn="15" endcolumn="34" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigItem" method="isDynamic" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'isDynamic': the method is declared in an interface type
</violation>
<violation beginline="613" endline="630" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on interface 'ConfigHistory': members of interface types are implicitly public
</violation>
<violation beginline="613" endline="630" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ConfigHistory': member interfaces are implicitly static
</violation>
<violation beginline="617" endline="617" begincolumn="15" endcolumn="31" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" method="getVersion" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getVersion': the method is declared in an interface type
</violation>
<violation beginline="621" endline="621" begincolumn="15" endcolumn="34" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" method="getTimestamp" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getTimestamp': the method is declared in an interface type
</violation>
<violation beginline="625" endline="625" begincolumn="15" endcolumn="33" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" method="getSource" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getSource': the method is declared in an interface type
</violation>
<violation beginline="629" endline="629" begincolumn="15" endcolumn="32" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigHistory" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getValue': the method is declared in an interface type
</violation>
<violation beginline="643" endline="657" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationProvider" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on interface 'ConfigurationProvider': members of interface types are implicitly public
</violation>
<violation beginline="643" endline="657" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationProvider" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ConfigurationProvider': member interfaces are implicitly static
</violation>
<violation beginline="656" endline="656" begincolumn="15" endcolumn="74" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationProvider" method="registerConfigItems" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'registerConfigItems': the method is declared in an interface type
</violation>
<violation beginline="666" endline="771" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on interface 'ConfigurationListener': members of interface types are implicitly public
</violation>
<violation beginline="666" endline="771" begincolumn="18" endcolumn="4" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ConfigurationListener': member interfaces are implicitly static
</violation>
<violation beginline="687" endline="687" begincolumn="15" endcolumn="90" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener" method="changing" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'changing': the method is declared in an interface type
</violation>
<violation beginline="701" endline="701" begincolumn="15" endcolumn="81" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener" method="changed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'changed': the method is declared in an interface type
</violation>
<violation beginline="707" endline="769" begincolumn="22" endcolumn="8" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on class 'BlockingConfigItem': members of interface types are implicitly public
</violation>
<violation beginline="707" endline="769" begincolumn="22" endcolumn="8" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on class 'BlockingConfigItem': types nested within an interface type are implicitly static
</violation>
<violation beginline="716" endline="716" begincolumn="19" endcolumn="41" rule="UnnecessaryConstructor" ruleset="Code Style" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="BlockingConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryconstructor" priority="3">
Avoid unnecessary constructors - the compiler will generate these for you
</violation>
<violation beginline="716" endline="716" begincolumn="19" endcolumn="41" rule="UncommentedEmptyConstructor" ruleset="Documentation" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="BlockingConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#uncommentedemptyconstructor" priority="3">
Document empty constructor
</violation>
<violation beginline="718" endline="720" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="requested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'requested()' is missing an @Override annotation.
</violation>
<violation beginline="721" endline="723" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="changed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'changed(Object, String)' is missing an @Override annotation.
</violation>
<violation beginline="724" endline="726" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="copy" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'copy()' is missing an @Override annotation.
</violation>
<violation beginline="727" endline="729" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getName()' is missing an @Override annotation.
</violation>
<violation beginline="730" endline="732" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getValue()' is missing an @Override annotation.
</violation>
<violation beginline="733" endline="735" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getType" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getType()' is missing an @Override annotation.
</violation>
<violation beginline="736" endline="738" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getDescription" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getDescription()' is missing an @Override annotation.
</violation>
<violation beginline="739" endline="741" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getSource" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getSource()' is missing an @Override annotation.
</violation>
<violation beginline="742" endline="744" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getDefaultValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getDefaultValue()' is missing an @Override annotation.
</violation>
<violation beginline="745" endline="747" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getRequested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getRequested()' is missing an @Override annotation.
</violation>
<violation beginline="748" endline="750" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getChanged" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getChanged()' is missing an @Override annotation.
</violation>
<violation beginline="751" endline="753" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getVersion" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getVersion()' is missing an @Override annotation.
</violation>
<violation beginline="754" endline="756" begincolumn="19" endcolumn="12" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="754" endline="756" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="getHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getHistory()' is missing an @Override annotation.
</violation>
<violation beginline="757" endline="759" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="isRegistered" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isRegistered()' is missing an @Override annotation.
</violation>
<violation beginline="760" endline="762" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="isDefaulted" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isDefaulted()' is missing an @Override annotation.
</violation>
<violation beginline="763" endline="765" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="isSecured" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isSecured()' is missing an @Override annotation.
</violation>
<violation beginline="766" endline="768" begincolumn="19" endcolumn="12" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.api" class="ServerConfigurationService$ConfigurationListener$BlockingConfigItem" method="isDynamic" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isDynamic()' is missing an @Override annotation.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/cover/ComponentManager.java">
<violation beginline="46" endline="199" begincolumn="8" endcolumn="1" rule="ClassWithOnlyPrivateConstructorsShouldBeFinal" ruleset="Design" package="org.sakaiproject.component.cover" class="ComponentManager" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#classwithonlyprivateconstructorsshouldbefinal" priority="1">
A class which only has private constructors should be final
</violation>
<violation beginline="46" endline="199" begincolumn="8" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ComponentManager" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'ComponentManager' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'
</violation>
<violation beginline="56" endline="56" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ComponentManager" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="82" endline="82" begincolumn="14" endcolumn="54" rule="UselessParentheses" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ComponentManager" method="isTestingMode" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="92" endline="95" begincolumn="13" endcolumn="13" rule="NonThreadSafeSingleton" ruleset="Multithreading" package="org.sakaiproject.component.cover" class="ComponentManager" method="shutdown" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_multithreading.html#nonthreadsafesingleton" priority="3">
Singleton is not thread safe
</violation>
<violation beginline="112" endline="126" begincolumn="4" endcolumn="4" rule="NonThreadSafeSingleton" ruleset="Multithreading" package="org.sakaiproject.component.cover" class="ComponentManager" method="getInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_multithreading.html#nonthreadsafesingleton" priority="3">
Singleton is not thread safe
</violation>
<violation beginline="120" endline="125" begincolumn="12" endcolumn="8" rule="NonThreadSafeSingleton" ruleset="Multithreading" package="org.sakaiproject.component.cover" class="ComponentManager" method="getInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_multithreading.html#nonthreadsafesingleton" priority="3">
Singleton is not thread safe
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/cover/ServerConfigurationService.java">
<violation beginline="24" endline="24" begincolumn="1" endcolumn="57" rule="UnnecessaryImport" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unnecessary import from the current package 'org.sakaiproject.component.cover.ComponentManager'
</violation>
<violation beginline="36" endline="357" begincolumn="8" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'ServerConfigurationService' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'
</violation>
<violation beginline="37" endline="357" begincolumn="1" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="org.sakaiproject.component.cover" class="ServerConfigurationService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="52" endline="53" begincolumn="5" endcolumn="76" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="65" endline="65" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="67" endline="67" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="70" endline="70" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="75" endline="75" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="78" endline="78" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="83" endline="83" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerIdInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="86" endline="86" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerIdInstance" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="91" endline="91" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="94" endline="94" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="99" endline="99" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="102" endline="102" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getServerUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="107" endline="107" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getAccessUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="110" endline="110" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getAccessUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="115" endline="115" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getAccessPath" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="118" endline="118" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getAccessPath" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="123" endline="123" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getHelpUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="123" endline="123" begincolumn="44" endcolumn="59" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getHelpUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="126" endline="126" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getHelpUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="131" endline="131" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getPortalUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="134" endline="134" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getPortalUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="139" endline="139" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="142" endline="142" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="147" endline="147" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getGatewaySiteId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="150" endline="150" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getGatewaySiteId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="155" endline="155" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getLoggedOutUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="158" endline="158" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getLoggedOutUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="163" endline="163" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getUserHomeUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="166" endline="166" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getUserHomeUrl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="171" endline="171" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getSakaiHomePath" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="174" endline="174" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getSakaiHomePath" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="179" endline="179" begincolumn="35" endcolumn="50" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getBoolean" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="182" endline="182" begincolumn="24" endcolumn="36" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getBoolean" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="187" endline="187" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="187" endline="187" begincolumn="43" endcolumn="58" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="187" endline="187" begincolumn="68" endcolumn="83" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="190" endline="190" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="195" endline="195" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="195" endline="195" begincolumn="43" endcolumn="58" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="198" endline="198" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getString" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="203" endline="203" begincolumn="16" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getStrings" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="203" endline="203" begincolumn="46" endcolumn="61" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getStrings" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="206" endline="206" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getStrings" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="211" endline="211" begincolumn="44" endcolumn="59" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolOrder" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="211" endline="211" begincolumn="16" endcolumn="29" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolOrder" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.List' due to existing import 'java.util.List'
</violation>
<violation beginline="214" endline="214" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolOrder" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="226" endline="226" begincolumn="48" endcolumn="63" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolsRequired" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="226" endline="226" begincolumn="16" endcolumn="29" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolsRequired" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.List' due to existing import 'java.util.List'
</violation>
<violation beginline="229" endline="229" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolsRequired" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="241" endline="241" begincolumn="49" endcolumn="64" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getCategoryGroups" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="241" endline="241" begincolumn="16" endcolumn="29" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getCategoryGroups" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.List' due to existing import 'java.util.List'
</violation>
<violation beginline="244" endline="244" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getCategoryGroups" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="256" endline="256" begincolumn="24" endcolumn="36" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="toolGroupIsSelected" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="267" endline="267" begincolumn="24" endcolumn="36" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="toolGroupIsRequired" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="271" endline="271" begincolumn="44" endcolumn="59" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolGroup" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="271" endline="271" begincolumn="16" endcolumn="29" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolGroup" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.List' due to existing import 'java.util.List'
</violation>
<violation beginline="274" endline="274" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolGroup" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="279" endline="279" begincolumn="47" endcolumn="62" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getDefaultTools" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="279" endline="279" begincolumn="16" endcolumn="29" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getDefaultTools" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.List' due to existing import 'java.util.List'
</violation>
<violation beginline="282" endline="282" begincolumn="24" endcolumn="35" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getDefaultTools" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="287" endline="287" begincolumn="27" endcolumn="42" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getInt" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.String' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="290" endline="290" begincolumn="24" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getInt" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="305" endline="305" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolCategories" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="318" endline="318" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolCategoriesAsMap" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="331" endline="331" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getToolToCategoryMap" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="338" endline="338" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getSmtpFrom" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="345" endline="345" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getSmtpPort" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="352" endline="352" begincolumn="28" endcolumn="39" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.component.cover" class="ServerConfigurationService" method="getSmtpServer" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/cover/TestComponentManagerContainer.java">
<violation beginline="85" endline="85" begincolumn="3" endcolumn="63" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.cover" class="TestComponentManagerContainer" method="TestComponentManagerContainer" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="89" endline="89" begincolumn="34" endcolumn="35" rule="CloseResource" ruleset="Error Prone" package="org.sakaiproject.component.cover" class="TestComponentManagerContainer" method="TestComponentManagerContainer" variable="ac" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this ConfigurableApplicationContext object are closed after use
</violation>
<violation beginline="147" endline="150" begincolumn="5" endcolumn="3" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.sakaiproject.component.cover" class="TestComponentManagerContainer" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="148" endline="149" begincolumn="4" endcolumn="20" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.cover" class="TestComponentManagerContainer" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="203" endline="203" begincolumn="4" endcolumn="31" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.cover" class="TestComponentManagerContainer" method="getService" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/ComponentManagerShim.java">
<violation beginline="30" endline="30" begincolumn="1" endcolumn="25" rule="UnnecessaryImport" ruleset="Code Style" package="org.sakaiproject.component.impl" class="ComponentManagerShim" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'java.util.HashSet'
</violation>
<violation beginline="49" endline="49" begincolumn="49" endcolumn="73" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.impl" class="ComponentManagerShim" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.HashSet' due to existing import 'java.util.HashSet'
</violation>
<violation beginline="50" endline="50" begincolumn="47" endcolumn="71" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.impl" class="ComponentManagerShim" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.HashSet' due to existing import 'java.util.HashSet'
</violation>
<violation beginline="51" endline="51" begincolumn="44" endcolumn="68" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.sakaiproject.component.impl" class="ComponentManagerShim" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.util.HashSet' due to existing import 'java.util.HashSet'
</violation>
<violation beginline="70" endline="70" begincolumn="50" endcolumn="55" rule="UnusedFormalParameter" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="ComponentManagerShim" variable="parent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused constructor parameters such as 'parent'.
</violation>
<violation beginline="102" endline="102" begincolumn="9" endcolumn="42" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="120" endline="120" begincolumn="9" endcolumn="51" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="150" endline="150" begincolumn="9" endcolumn="43" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="get" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="175" endline="175" begincolumn="13" endcolumn="73" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="logLenientLookup" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="188" endline="188" begincolumn="9" endcolumn="56" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="contains" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="197" endline="197" begincolumn="9" endcolumn="47" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="contains" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="240" endline="240" begincolumn="9" endcolumn="71" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="250" endline="250" begincolumn="9" endcolumn="63" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="ComponentManagerShim" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/DynamicDefaultSakaiProperties.java">
<violation beginline="38" endline="38" begincolumn="4" endcolumn="31" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="DynamicDefaultSakaiProperties" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/MockCompMgr.java">
<violation beginline="47" endline="47" begincolumn="13" endcolumn="94" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="MockCompMgr" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="60" endline="63" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="close" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'close()' is missing an @Override annotation.
</violation>
<violation beginline="65" endline="67" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="hasBeenClosed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'hasBeenClosed()' is missing an @Override annotation.
</violation>
<violation beginline="69" endline="72" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="contains" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'contains(Class)' is missing an @Override annotation.
</violation>
<violation beginline="74" endline="77" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="contains" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'contains(String)' is missing an @Override annotation.
</violation>
<violation beginline="79" endline="82" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'get(Class)' is missing an @Override annotation.
</violation>
<violation beginline="84" endline="87" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="get" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'get(String)' is missing an @Override annotation.
</violation>
<violation beginline="89" endline="91" begincolumn="12" endcolumn="5" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="org.sakaiproject.component.impl" class="MockCompMgr" method="getConfig" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="89" endline="91" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="getConfig" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getConfig()' is missing an @Override annotation.
</violation>
<violation beginline="93" endline="95" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="getRegisteredInterfaces" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getRegisteredInterfaces()' is missing an @Override annotation.
</violation>
<violation beginline="97" endline="106" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'loadComponent(Class, Object)' is missing an @Override annotation.
</violation>
<violation beginline="108" endline="117" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="loadComponent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'loadComponent(String, Object)' is missing an @Override annotation.
</violation>
<violation beginline="119" endline="121" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="MockCompMgr" method="waitTillConfigured" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'waitTillConfigured()' is missing an @Override annotation.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/SakaiContextLoader.java">
<violation beginline="99" endline="99" begincolumn="3" endcolumn="18" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.sakaiproject.component.impl" class="SakaiContextLoader" method="loadParentContext" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'sharedAc'
</violation>
<violation beginline="112" endline="112" begincolumn="4" endcolumn="99" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="SakaiContextLoader" method="getHomeBeanDefinitionIfExists" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="114" endline="114" begincolumn="5" endcolumn="103" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="SakaiContextLoader" method="getHomeBeanDefinitionIfExists" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="117" endline="117" begincolumn="5" endcolumn="97" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.component.impl" class="SakaiContextLoader" method="getHomeBeanDefinitionIfExists" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/locales/SakaiLocales.java">
<violation beginline="29" endline="38" begincolumn="8" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="org.sakaiproject.component.locales" class="SakaiLocales" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'SakaiLocales' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/BeanDefinitionSource.java">
<violation beginline="44" endline="44" begincolumn="12" endcolumn="28" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.modi" class="BeanDefinitionSource" method="getName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'getName': the method is declared in an interface type
</violation>
<violation beginline="49" endline="49" begincolumn="12" endcolumn="63" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.modi" class="BeanDefinitionSource" method="registerBeans" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'public' on method 'registerBeans': the method is declared in an interface type
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/Configuration.java">
<violation beginline="109" endline="109" begincolumn="13" endcolumn="69" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.modi" class="Configuration" method="validate" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/Environment.java">
<violation beginline="135" endline="135" begincolumn="27" endcolumn="33" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.modi" class="Environment" method="ensureSecurity" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="136" endline="136" begincolumn="67" endcolumn="91" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.modi" class="Environment" method="ensureSecurity" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="169" endline="169" begincolumn="17" endcolumn="44" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.modi" class="Environment" method="createHomeIfNeeded" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="179" endline="179" begincolumn="13" endcolumn="47" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.modi" class="Environment" method="checkHomeReadWrite" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/GlobalApplicationContext.java">
<violation beginline="27" endline="67" begincolumn="8" endcolumn="1" rule="ClassWithOnlyPrivateConstructorsShouldBeFinal" ruleset="Design" package="org.sakaiproject.modi" class="GlobalApplicationContext" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#classwithonlyprivateconstructorsshouldbefinal" priority="1">
A class which only has private constructors should be final
</violation>
<violation beginline="27" endline="67" begincolumn="8" endcolumn="1" rule="ClassNamingConventions" ruleset="Code Style" package="org.sakaiproject.modi" class="GlobalApplicationContext" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#classnamingconventions" priority="1">
The utility class name 'GlobalApplicationContext' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/SakaiStartListener.java">
<violation beginline="39" endline="42" begincolumn="9" endcolumn="9" rule="SwitchStmtsShouldHaveDefault" ruleset="Best Practices" package="org.sakaiproject.modi" class="SakaiStartListener" method="lifecycleEvent" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault" priority="3">
Switch statements should be exhaustive, add a default case (or missing enum branches)
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/BasicConfigHistory.java">
<violation beginline="74" endline="76" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigHistory" method="getVersion" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getVersion()' is missing an @Override annotation.
</violation>
<violation beginline="81" endline="83" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigHistory" method="getTimestamp" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getTimestamp()' is missing an @Override annotation.
</violation>
<violation beginline="88" endline="90" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigHistory" method="getSource" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getSource()' is missing an @Override annotation.
</violation>
<violation beginline="95" endline="97" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigHistory" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getValue()' is missing an @Override annotation.
</violation>
<violation beginline="119" endline="119" begincolumn="13" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="121" endline="121" begincolumn="13" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="123" endline="123" begincolumn="13" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="127" endline="127" begincolumn="17" endcolumn="29" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="129" endline="129" begincolumn="13" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="130" endline="131" begincolumn="9" endcolumn="25" rule="SimplifyBooleanReturns" ruleset="Design" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#simplifybooleanreturns" priority="3">
Avoid unnecessary if..then..else statements when returning booleans
</violation>
<violation beginline="131" endline="131" begincolumn="13" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="BasicConfigHistory" method="equals" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/BasicConfigItem.java">
<violation beginline="65" endline="65" begincolumn="15" endcolumn="34" rule="UncommentedEmptyConstructor" ruleset="Documentation" package="org.sakaiproject.util" class="BasicConfigItem" method="BasicConfigItem" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#uncommentedemptyconstructor" priority="3">
Document empty constructor
</violation>
<violation beginline="99" endline="101" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="requested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'requested()' is missing an @Override annotation.
</violation>
<violation beginline="103" endline="105" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="changed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'changed(Object, String)' is missing an @Override annotation.
</violation>
<violation beginline="107" endline="109" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="copy" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'copy()' is missing an @Override annotation.
</violation>
<violation beginline="111" endline="113" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getName()' is missing an @Override annotation.
</violation>
<violation beginline="115" endline="117" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getValue()' is missing an @Override annotation.
</violation>
<violation beginline="119" endline="121" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getType" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getType()' is missing an @Override annotation.
</violation>
<violation beginline="123" endline="125" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getDescription" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getDescription()' is missing an @Override annotation.
</violation>
<violation beginline="127" endline="129" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getSource" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getSource()' is missing an @Override annotation.
</violation>
<violation beginline="131" endline="133" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getDefaultValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getDefaultValue()' is missing an @Override annotation.
</violation>
<violation beginline="135" endline="137" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getRequested" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getRequested()' is missing an @Override annotation.
</violation>
<violation beginline="139" endline="141" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getChanged" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getChanged()' is missing an @Override annotation.
</violation>
<violation beginline="143" endline="145" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getVersion" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getVersion()' is missing an @Override annotation.
</violation>
<violation beginline="147" endline="149" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="getHistory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getHistory()' is missing an @Override annotation.
</violation>
<violation beginline="151" endline="153" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="isRegistered" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isRegistered()' is missing an @Override annotation.
</violation>
<violation beginline="155" endline="157" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="isDefaulted" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isDefaulted()' is missing an @Override annotation.
</violation>
<violation beginline="159" endline="161" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="isSecured" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isSecured()' is missing an @Override annotation.
</violation>
<violation beginline="163" endline="165" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="BasicConfigItem" method="isDynamic" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isDynamic()' is missing an @Override annotation.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/ReversiblePropertyOverrideConfigurer.java">
<violation beginline="32" endline="43" begincolumn="12" endcolumn="2" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="ReversiblePropertyOverrideConfigurer" method="processKey" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'processKey(ConfigurableListableBeanFactory, String, String)' is missing an @Override annotation.
</violation>
<violation beginline="45" endline="48" begincolumn="9" endcolumn="2" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="ReversiblePropertyOverrideConfigurer" method="setBeanNameSeparator" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'setBeanNameSeparator(String)' is missing an @Override annotation.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/SakaiApplicationContext.java">
<violation beginline="49" endline="56" begincolumn="12" endcolumn="2" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiApplicationContext" method="prepareBeanFactory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'prepareBeanFactory(ConfigurableListableBeanFactory)' is missing an @Override annotation.
</violation>
<violation beginline="74" endline="77" begincolumn="12" endcolumn="2" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiApplicationContext" method="postProcessBeanFactory" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'postProcessBeanFactory(ConfigurableListableBeanFactory)' is missing an @Override annotation.
</violation>
<violation beginline="82" endline="89" begincolumn="12" endcolumn="2" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiApplicationContext" method="onRefresh" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'onRefresh()' is missing an @Override annotation.
</violation>
<violation beginline="84" endline="86" begincolumn="4" endcolumn="4" rule="ForLoopCanBeForeach" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiApplicationContext" method="onRefresh" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#forloopcanbeforeach" priority="3">
This for loop can be replaced by a foreach loop
</violation>
<violation beginline="97" endline="102" begincolumn="3" endcolumn="3" rule="ForLoopCanBeForeach" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiApplicationContext" method="invokePostProcessorCreators" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#forloopcanbeforeach" priority="3">
This for loop can be replaced by a foreach loop
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/SakaiComponentEvent.java">
<violation beginline="27" endline="36" begincolumn="16" endcolumn="2" rule="UnnecessaryModifier" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiComponentEvent$Type" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on enum 'Type': nested enums are implicitly static
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/SakaiContextLoaderListener.java">
<violation beginline="71" endline="71" begincolumn="3" endcolumn="93" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiContextLoaderListener" method="contextDestroyed" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="92" endline="94" begincolumn="6" endcolumn="6" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.sakaiproject.util" class="SakaiContextLoaderListener" method="cleanupAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="93" endline="93" begincolumn="7" endcolumn="95" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiContextLoaderListener" method="cleanupAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/SakaiProperties.java">
<violation beginline="76" endline="81" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties" method="afterPropertiesSet" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'afterPropertiesSet()' is missing an @Override annotation.
</violation>
<violation beginline="86" endline="88" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties" method="getBeanFactoryPostProcessors" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getBeanFactoryPostProcessors()' is missing an @Override annotation.
</violation>
<violation beginline="87" endline="87" begincolumn="17" endcolumn="121" rule="UselessParentheses" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiProperties" method="getBeanFactoryPostProcessors" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="139" endline="139" begincolumn="9" endcolumn="32" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiProperties" method="getProperties" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'parsedProperties'
</violation>
<violation beginline="150" endline="150" begincolumn="38" endcolumn="86" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiProperties" method="getRawProperties" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="272" endline="274" begincolumn="22" endcolumn="9" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="isSingleton" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'isSingleton()' is missing an @Override annotation.
</violation>
<violation beginline="276" endline="280" begincolumn="22" endcolumn="9" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="afterPropertiesSet" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'afterPropertiesSet()' is missing an @Override annotation.
</violation>
<violation beginline="282" endline="288" begincolumn="22" endcolumn="9" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="getObject" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getObject()' is missing an @Override annotation.
</violation>
<violation beginline="291" endline="293" begincolumn="16" endcolumn="9" rule="MissingOverride" ruleset="Best Practices" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="getObjectType" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getObjectType()' is missing an @Override annotation.
</violation>
<violation beginline="329" endline="329" begincolumn="22" endcolumn="105" rule="UselessParentheses" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="setPropertiesPersister" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="356" endline="356" begincolumn="38" endcolumn="96" rule="ControlStatementBraces" ruleset="Code Style" package="org.sakaiproject.util" class="SakaiProperties$SakaiPropertiesFactoryBean" method="mergeProperties" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/TerracottaClassLoader.java">
<violation beginline="65" endline="66" begincolumn="4" endcolumn="50" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.util" class="TerracottaClassLoader" method="TerracottaClassLoader" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="69" endline="71" begincolumn="10" endcolumn="46" rule="GuardLogStatement" ruleset="Best Practices" package="org.sakaiproject.util" class="TerracottaClassLoader" method="TerracottaClassLoader" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="76" endline="78" begincolumn="12" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.sakaiproject.util" class="TerracottaClassLoader" method="__tc_getClassLoaderName" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name '__tc_getClassLoaderName' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
</file>
<error filename="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/SpringCompMgr.java" msg="PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/SpringCompMgr.java">
<![CDATA[net.sourceforge.pmd.PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/component/impl/SpringCompMgr.java
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:128)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:100)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:62)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:85)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:29)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 49147 out of bounds for length 11795
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.getImportedClasses(PMDASMClassLoader.java:118)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateClassName(ClassTypeResolver.java:1617)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:214)
	at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:44)
	at net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:21)
	at net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:121)
	at net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:178)
	at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:205)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:118)
	... 10 more
]]>
</error>
<error filename="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/TraditionalComponent.java" msg="PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/TraditionalComponent.java">
<![CDATA[net.sourceforge.pmd.PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/modi/TraditionalComponent.java
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:128)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:100)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:62)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:85)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:29)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 29932 out of bounds for length 10655
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.getImportedClasses(PMDASMClassLoader.java:118)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateClassName(ClassTypeResolver.java:1617)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:214)
	at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:44)
	at net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:21)
	at net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:121)
	at net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:178)
	at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:205)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:118)
	... 10 more
]]>
</error>
<error filename="/home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/ComponentsLoader.java" msg="PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/ComponentsLoader.java">
<![CDATA[net.sourceforge.pmd.PMDException: Error while processing /home/alumno/Escritorio/sakai/kernel/component-manager/src/main/java/org/sakaiproject/util/ComponentsLoader.java
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:128)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:100)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:62)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:85)
	at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:29)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index 52216 out of bounds for length 7898
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at org.objectweb.asm.ClassReader.<init>(Unknown Source)
	at net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.getImportedClasses(PMDASMClassLoader.java:118)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateClassName(ClassTypeResolver.java:1617)
	at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:214)
	at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:44)
	at net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:21)
	at net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:121)
	at net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:178)
	at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:205)
	at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:118)
	... 10 more
]]>
</error>
</pmd>
