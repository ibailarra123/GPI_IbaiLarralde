19:23:45,217   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,224   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,227   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,258   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,259   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,260   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

19:23:45,261   INFO BasicConfigurationServiceTest:66 - Config items: 15 (15, 0)
  1: AZ => Aaron Zeckoski  R,N:(string [TEST] 0, 0, [])
  2: booleanVal => true  R,N:(boolean [TEST] 0, 0, [])
  3: intVal => 11  R,N:(int [TEST] 0, 0, [])
  4: name => Aaron  R,N:(string [TEST] 0, 0, [])
  5: test1 => test1  R,N:(string [TEST] 0, 0, [])
  6: test2 => test2  R,N:(string [TEST] 0, 0, [])
  7: test3 => test3  R,N:(string [TEST] 0, 0, [])
  8: test4 => test4  R,N:(string [TEST] 0, 0, [])
  9: test5 => test5  R,N:(string [TEST] 0, 0, [])
  10: test6 => test6  R,N:(string [TEST] 0, 0, [])
  11: test7 => ${AZ}  R,N:(string [TEST] 0, 0, [])
  12: testKeyEmpty =>   R,N:(string [TEST] 0, 0, [])
  13: testKeyInvalid => testing invalid=${invalid} testing  R,N:(string [TEST] 0, 0, [])
  14: testKeyNested => testing name=${name} testing  R,N:(string [TEST] 0, 0, [])
  15: testKeyNestedMulti => testing az=${AZ} nested=${testKeyNested} invalid=${invalid}  R,N:(string [TEST] 0, 0, [])

